generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Community {
  id          String  @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user_id     String
  posts       Post[]
}

model Post {
  id           String   @id @default(uuid())
  title        String
  category     String
  description  String
  mediaUrl     String?
  user_id      String
  community_id String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  community    Community @relation(fields: [community_id], references: [id])
  comments     Comment[]
  likes        Like[]
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  user_id   String
  post_id   String
  parent_id String? // for threaded replies
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post      Post     @relation(fields: [post_id], references: [id])
  parent    Comment? @relation("CommentReplies", fields: [parent_id], references: [id])
  replies   Comment[] @relation("CommentReplies")
  likes     Like[]
}

model Like {
  id         String   @id @default(uuid())
  user_id    String
  post_id    String?
  comment_id String?
  createdAt  DateTime @default(now())

  post       Post?    @relation(fields: [post_id], references: [id])
  comment    Comment? @relation(fields: [comment_id], references: [id])
  @@unique([user_id, comment_id])
  @@unique([user_id, post_id])

}
